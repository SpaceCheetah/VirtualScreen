#include "font.h"
std::bitset<36> font::loadChar(uint8_t c) //based on minecraftia (only pixel font I knew of), but modified to fit in 5x7
{
	switch (c) {
	case 32:
		return {1}; //' '
	case 33:
		return { 0b001000010000100001000010000000001001 };//!
	case 34:
		return { 0b010100101010100000000000000000000001 };//"
	case 35:
		return { 0b010100101011111010101111101010010101 };//#
	case 36:
		return { 0b001000111110000011100000111110001001 };//$
	case 37:
		return { 0b100011001000010001000100001001100011 };//%
	case 38:
		return { 0b001000101000100011011011010010011011 };//&
	case 39:
		return { 0b001000010001000000000000000000000001 };//'
	case 40:
		return { 0b001100100010000100001000001000001101 };//(
	case 41:
		return { 0b011000001000001000010000100010011001 };//)
	case 42:
		return { 0b100100110010010000000000000000000001 };//*
	case 43:
		return { 0b000000010000100111110010000100000001 };//+
	case 44:
		return { 0b000000000000000000000010000100001001 };//,
	case 45:
		return { 0b000000000000000111110000000000000001 };//-
	case 46:
		return { 0b000000000000000000000010000100000001 };//.
	case 47:
		return { 0b000010001000010001000100001000100001 };///
	case 48:
		return { 0b011101000110011101011100110001011101 };//0
	case 49:
		return { 0b001000110000100001000010000100111111 };//1
	case 50:
		return { 0b011101000100001001100100010001111111 };//2
	case 51:
		return { 0b011101000100001001100000110001011101 };//3
	case 52:
		return { 0b000110010101001100011111100001000011 };//4
	case 53:
		return { 0b111111000011110000010000110001011101 };//5
	case 54:
		return { 0b001100100010000111101000110001011101 };//6
	case 55:
		return { 0b111111000100001000100010000100001001 };//7
	case 56:
		return { 0b011101000110001011101000110001011101 };//8
	case 57:
		return { 0b011101000110001011110000100010011001 };//9
	case 58:
		return { 0b000000010000100000000000000100001001 };//:
	case 59:
		return { 0b000000010000100000000010000100001001 };//;
	case 60:
		return { 0b000100010001000100000100000100000101 };//<
	case 61:
		return { 0b000001111100000000001111100000000001 };//=
	case 62:
		return { 0b010000010000010000010001000100010001 };//>
	case 63:
		return { 0b011101000100001000100010000000001001 };//?
	case 64:
		return { 0b011101000110101101011011110000011101 };//@
	case 65:
		return { 0b011101000110001111111000110001100011 };//A
	case 66:
		return { 0b111101000111110100011000110001111101 };//B
	case 67:
		return { 0b011101000110000100001000010001011101 };//C
	case 68:
		return { 0b111101000110001100011000110001111101 };//D
	case 69:
		return { 0b111111000011110100001000010000111111 };//E
	case 70:
		return { 0b111111000011100100001000010000100001 };//F
	case 71:
		return { 0b011111000010111100011000110001011101 };//G
	case 72:
		return { 0b100011000111111100011000110001100011 };//H
	case 73:
		return { 0b111110010000100001000010000100111111 };//I
	case 74:
		return { 0b000010000100001000010000110001011101 };//J
	case 75:
		return { 0b100011001011100100101000110001100011 };//K
	case 76:
		return { 0b100001000010000100001000010000111111 };//L
	case 77:
		return { 0b100011101110101100011000110001100011 };//M
	case 78:
		return { 0b100011100110101100111000110001100011 };//N
	case 79:
		return { 0b011101000110001100011000110001011101 };//O
	case 80:
		return { 0b111101000111110100001000010000100001 };//P
	case 81:
		return { 0b011101000110001100011000110010011011 };//Q
	case 82:
		return { 0b111101000111110100011000110001100011 };//R
	case 83:
		return { 0b011111000001110000010000110001011101 };//S
	case 84:
		return { 0b111110010000100001000010000100001001 };//T
	case 85:
		return { 0b100011000110001100011000110001011101 };//U
	case 86:
		return { 0b100011000110001100010101001010001001 };//V
	case 87:
		return { 0b100011000110001100011010111011100011 };//W
	case 88:
		return { 0b100010101000100010101000110001100011 };//X
	case 89:
		return { 0b100010101000100001000010000100001001 };//Y
	case 90:
		return { 0b111110000100010001000100010000111111 };//Z
	case 91:
		return { 0b011100100001000010000100001000011101 };//[
	case 92:
		return { 0b100000100001000001000001000010000011 };//'\' (had to add '' to not continue comment on next line)
	case 93:
		return { 0b011100001000010000100001000010011101 };//]
	case 94:
		return { 0b001000101010001000000000000000000001 };//^
	case 95:
		return { 0b000000000000000000000000000000111111 };//_
	case 96:
		return { 0b001000010000010000000000000000000001 };//`
	case 97:
		return { 0b000000000001110000010111110001011111 };//a
	case 98:
		return { 0b100001000010000101101100110001111101 };//b
	case 99:
		return { 0b000000000001110100011000010001011101 };//c
	case 100:
		return { 0b000010000101101100111000110001011111 };//d
	case 101:
		return { 0b000000000001110100011111110000011111 };//e
	case 102:
		return { 0b000000011101000111110100001000010001 };//f
	case 103:
		return { 0b000000111110001100010111100001111101 };//g
	case 104:
		return { 0b100001000010000101101100110001100011 };//h
	case 105:
		return { 0b001000000000100001000010000100001001 };//i
	case 106:
		return { 0b000010000000001000010000110001011101 };//j
	case 107:
		return { 0b100001000010010101001100010100100101 };//k
	case 108:
		return { 0b001000010000100001000010000100000101 };//l
	case 109:
		return { 0b000000000011010101011010110001100011 };//m
	case 110:
		return { 0b000000000000000111101000110001100011 };//n
	case 111:
		return { 0b000000000001110100011000110001011101 };//o
	case 112:
		return { 0b000001011011001100011111010000100001 };//p
	case 113:
		return { 0b000000110110011100010111100001000011 };//q
	case 114:
		return { 0b000000000010110110011000010000100001 };//r
	case 115:
		return { 0b000000000001111100000111000001111101 };//s
	case 116:
		return { 0b001000010001110001000010000100000101 };//t
	case 117:
		return { 0b000000000000000100011000110001011111 };//u
	case 118:
		return { 0b000000000010001100011000101010001001 };//v
	case 119:
		return { 0b000000000010001100011010110101011111 };//w
	case 120:
		return { 0b000000000010001010100010001010100011 };//x
	case 121:
		return { 0b000001000110001100010111100001111101 };//y
	case 122:
		return { 0b000000000011111000100010001000111111 };//z
	case 123:
		return { 0b000110010000100010000010000100000111 };//{
	case 124:
		return { 0b100001000010000000001000010000100001 };//|
	case 125:
		return { 0b110000010000100000100010000100110001 };//}
	case 126:
		return { 0b011011001000000000000000000000000001 };//~
	default:
		return {0};
	}
}